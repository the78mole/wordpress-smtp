name: Build and Push Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write   # f√ºr Tagging & Releases
  packages: write   # f√ºr GHCR push
  id-token: write

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
      tag: v${{ steps.semver.outputs.version }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for accurate versioning

      - name: üè∑Ô∏è Generate release version
        id: semver
        uses: paulhatch/semantic-version@v5.4.0
        with:
          branch: main
          tag_prefix: "v"
          version_format: "${major}.${minor}.${patch}"
          major_pattern: "/^(feat|fix|refactor)!:/"
          minor_pattern: "/^feat:/"
          bump_each_commit: true
          search_commit_body: true

  build-and-push:
    needs: versioning
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/wordpress-smtp:latest
            ghcr.io/${{ github.repository_owner }}/wordpress-smtp:${{ needs.versioning.outputs.version }}

      - name: Create Git tag
        if: github.event_name == 'push'
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"
          git tag ${{ needs.versioning.outputs.tag }}
          git push origin ${{ needs.versioning.outputs.tag }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.versioning.outputs.tag }}
          name: Release ${{ needs.versioning.outputs.tag }}
          body: |
            üê≥ Neues Docker-Image: `${{ needs.versioning.outputs.tag }}`
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
